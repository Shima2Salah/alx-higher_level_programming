The ''0-add_integer'' module
=================================
Using ''module to add numbers 0-add_integer''
----------------------------------------
import module:
    >>> add_integer = __import__('0-add_integer').add_integer
    
Test default b:
    >>> add_integer(12)
    110
    
Test first double:
    >>> add_integer(7.2, 3)
    10
    
Test second double:
    >>> add_integer(4, 8.19)
    12
    
Test sum:
    >>> add_integer(15, 6)
    21
    
Test double values:
    >>> add_integer(13.9,17.6 )
    30
    
Test a lists:
    >>> add_integer([5, 6], 3)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer
    
Test b lists:
    >>> add_integer(3, [5, 6])
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

Test a strTErr:
    >>> add_integer("hi", 2)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

Test b strTErr:
    >>> add_integer(2, "hi")
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

Test empty string:
    >>> add_integer(" ", 2)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer
    
Test empty string:
    >>> add_integer(2, " ")
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer
    
Test empty 2 string:
    >>> add_integer("", "")
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer
    
Test negative val:
    >>> add_integer(-100.3, -2)
    -102

Test negative val:
    >>> add_integer(None)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer
    
Test infinity num:
    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer
