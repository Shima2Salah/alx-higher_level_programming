import module:
    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

Test integers:
    >>> matrix_mul([[5, 7], [8, 9]], [[2, 2], [7, 4]])
    [[59, 38], [79, 52]]

Test floats:
    >>> matrix_mul([[5.7, 7.8], [8.6, 9.6]], [[2.5, 2.9], [7.8, 4.3]])
    [[75.09, 50.07], [96.38, 66.22]]

Test empty1:
    >>> matrix_mul([[]], [[2, 2], [7, 4]])
    Traceback (most recent call last):
    ...
    ValueError: m_a can't be empty

Test empty2:
    >>> matrix_mul([[1, 2], [3, 4]], [[]])
    Traceback (most recent call last):
    ...
    ValueError: m_b can't be empty

Test empty3:
    >>> matrix_mul([], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    ValueError: m_a can't be empty

Test empty4:
    >>> matrix_mul([[1, 2], [3, 4]], [])
    Traceback (most recent call last):
    ...
    ValueError: m_b can't be empty

Test lists1:
    >>> matrix_mul("hello", [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: m_a must be a list

Test lists2:
    >>> matrix_mul(5, [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: m_a must be a list

Test lists3:
    >>> matrix_mul([[1, 2], [3, 4]], "hi")
    Traceback (most recent call last):
    ...
    TypeError: m_b must be a list

Test lists4:
    >>> matrix_mul([[5, 7], [8, 9]], 5754646)
    Traceback (most recent call last):
    ...
    TypeError: m_b must be a list

Test listoflists1:
    >>> matrix_mul(["hello", 2, 5], [[2, 2], [7, 4]])
    Traceback (most recent call last):
    ...
    TypeError: m_a must be a list of lists

Test listoflists2:
    >>> matrix_mul([[5, 7], [8, 9]], ["hello", 2, 5])
    Traceback (most recent call last):
    ...
    TypeError: m_b must be a list of lists

Test integers1:
    >>> matrix_mul([["hello", 2, 5], [8, 9]], [[2, 2], [7, 4]])
    Traceback (most recent call last):
    ...
    ValueError: m_a should contain only integers or floats

Test integers2:
    >>> matrix_mul([[5, 7], [8, 9]], [["hello", 2, 5], [7, 4]])
    Traceback (most recent call last):
    ...
    ValueError: m_b should contain only integers or floats

Test same size1:
    >>> matrix_mul([[5, 7], [8]], [[2, 2], [7, 4]])
    Traceback (most recent call last):
    ...
    TypeError: each row of m_a must be of the same size

Test same size2:
    >>> matrix_mul([[5, 7], [8, 9]], [[2], [7, 9]])
    Traceback (most recent call last):
    ...
    TypeError: each row of m_b must be of the same size

Test multiplication:
    >>> matrix_mul([[5, 7, 10], [8, 9, 11]], [[2, 2], [7, 4]])
    Traceback (most recent call last):
    ...
    ValueError: m_a and m_b can't be multiplied
